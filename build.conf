# shellcheck shell=bash disable=SC2034

# git-lfs doesn't install on s390x
EXCLUDED_ARCHES='s390x'

CACHE_EXPIRY=86400

declare -A BUILD_ARGS=(
	[JRE_VERSION]='JRE version' \
	[JRE_OS]='JRE OS' \
	[REMOTING_VERSION]='Remoting version' \
	[AGENT_TYPE]='agent type' \
	[ENTRYPOINT]='entrypoint' \
)

declare -A CHECKOUT_DISPLAY=(
	[JRE_VERSION]='JRE version' \
	[JRE_OS]='JRE OS' \
	[REMOTING_VERSION]='Remoting version' \
	[REMOTING_LATEST]='Remoting latest' \
	[AGENT_TYPE]='agent type' \
)

case ${DOCKER_TAG} in
	*alpine*)
		JRE_OS='alpine'
		JRE_VERSION='8'
		SOURCE_REPO='openjdk'
		SOURCE_TAG="${JRE_VERSION}-jre-${JRE_OS}"
		ARCH_YAML='arch.alpine.yaml'
		DOCKER_FILE='Dockerfile.alpine'
		;;
	*debian*|*)
		JRE_OS='debianslim'
		JRE_VERSION='11.0.11_9'
		ARCH_YAML='arch.debian.yaml'
		SOURCE_REPO='adoptopenjdk/openjdk11'
		SOURCE_TAG="jre-${JRE_VERSION}-${JRE_OS}"
		;;
esac

case ${DOCKER_TAG} in
	*inbound*)
		AGENT_TYPE='inbound-agent'
		SOURCE_REPO='moonbuggy2000/jenkins-agent'
		DOCKER_FILE='Dockerfile.inbound'
		;;
	*)
		AGENT_TYPE='agent'
		;;
esac

post_checkout_start () {
	[ -z "${REMOTING_LATEST+set}" ] \
		&& add_param "$(git_latest_release 'jenkinsci/remoting' | cut -d'-' -f2)" 'REMOTING_LATEST'

	[ -z "${REMOTING_VERSION+set}" ] \
		&& REMOTING_VERSION="${REMOTING_LATEST}"

	TARGET_TAG="${AGENT_TYPE}-${REMOTING_VERSION}-jre${JRE_VERSION%%.*}-${JRE_OS}"
}

get_from_image () {
	if [ "x${AGENT_TYPE}" = 'xinbound-agent' ]; then
		echo "${SOURCE_REPO}:agent-${REMOTING_VERSION}-jre${JRE_VERSION%%.*}-${JRE_OS}-${TARGET_ARCH_TAG}"
	else case ${JRE_OS} in
		*alpine*)
			refnum="$(grep -oP "^([0-9]*)(?=.*Arch:\s+${MANIFEST_ARCH:-${TARGET_ARCH_TAG}}$)" "${SOURCE_MANIFEST}")"

			[ "$(echo "${refnum}" | wc -l)" -gt '1' ] && for r in ${refnum}; do
				if grep -qoP "^${r}\s+.*Variant:\s+\K${MANIFEST_VARIANT}" "${SOURCE_MANIFEST}"; then
					refnum="${r}" && break
				fi
			done

			digest="$(grep -oP "^${refnum}\s+.*Digest:\s+\K.*" "${SOURCE_MANIFEST}")"
			echo "${SOURCE_REPO}@${digest}"
			;;
		*) echo "${SOURCE_REPO}:${JRE_ARCH}-${JRE_OS}-jre-${JRE_VERSION}" ;;
	esac; fi
}

get_base_tags () {
	tags=("${AGENT_TYPE}-${JRE_OS}")
	[ "x${JRE_OS}" = 'xdebianslim' ] && tags+=("${AGENT_TYPE}")

	echo "${tags[@]}"
}

get_manifest_tags () {
	tags=()
	[ "x${REMOTING_VERSION}" = "x${REMOTING_LATEST}" ] \
		&& tags+=("${AGENT_TYPE}-${JRE_OS}")

	if [ "x${JRE_OS}" = 'xdebianslim' ]; then
		[ "x${REMOTING_VERSION}" = "x${REMOTING_LATEST}" ] \
			&& tags+=("${AGENT_TYPE}")
	fi

	echo "${tags[@]}"
}
